# Coolify Deployment Configuration
# This file configures the deployment settings for Coolify platform

version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - EMAIL_SERVER_HOST=${EMAIL_SERVER_HOST}
      - EMAIL_SERVER_PORT=${EMAIL_SERVER_PORT}
      - EMAIL_SERVER_USER=${EMAIL_SERVER_USER}
      - EMAIL_SERVER_PASSWORD=${EMAIL_SERVER_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - uploads:/app/uploads
      - logs:/app/logs
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - verida-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=verida_prod
      - POSTGRES_USER=verida_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U verida_user -d verida_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - verida-network

volumes:
  postgres_data:
    driver: local
  uploads:
    driver: local
  logs:
    driver: local

networks:
  verida-network:
    driver: bridge

# Coolify specific labels
labels:
  - "coolify.managed=true"
  - "coolify.version=1.0"
  - "coolify.type=application"
  - "coolify.name=verida-kurumsal-bilgi"